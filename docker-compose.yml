version: '3.7'

services:

  apt-mirror:
    build:
      context: .
      dockerfile: Dockerfiles/apt-mirror.Dockerfile
    image: mmguero/espejo_apt-mirror:latest
    restart: "no"
    hostname: apt-mirror
    volumes:
      # package directory
      - ./apt-data:/mnt/mirror/debian:rw
      # config (extra mirrors)
      - ./config/mirror.list:/etc/apt/mirror.list:ro

  bandersnatch:
    build:
      context: .
      dockerfile: Dockerfiles/bandersnatch.Dockerfile
    image: mmguero/espejo_bandersnatch:latest
    restart: "no"
    hostname: bandersnatch
    environment:

      # https://bandersnatch.readthedocs.io/en/latest/filtering_configuration.html#keep-only-latest-releases
      LATEST_RELEASE: 0

      # semicolon-separated list of platforms to not mirror the corresponding files: windows;macos;freebsd;linux
      # https://bandersnatch.readthedocs.io/en/latest/filtering_configuration.html#platform-specific-binaries-filtering
      BLACKLIST_PLATFORMS: 'macos;windows;freebsd'

      # semicolon-separated list of keywords, matched case-insensitively against projects to filter those projects
      # out if they match any of the keywords provided. prefix a keyword with r: to indicate that it's a regex match.
      # https://packaging.python.org/guides/distributing-packages-using-setuptools/#keywords
      BLACKLIST_KEYWORDS : ''

      # semicolon-separated list of classifiers, matched case-insensitively against projects to filter those projects
      # out if they match any of the classifiers provided. prefix a classifier with r: to indicate that it's a regex match.
      # https://packaging.python.org/guides/distributing-packages-using-setuptools/#classifiers
      # https://pypi.org/classifiers/
      BLACKLIST_CLASSIFIERS : ''

      # populating the PyPi cache database (pypi_filter.py) takes a LONG time and a LOT of HTTPS requests to PyPi
      # so this cache is used to make future runs less painful
      PYPI_PROJECT_DB : '/pypidb/pypi_cache.db'

      # if using PYPI_PROJECT_DB as described above, you can set this to 'true' to force use of the cache database
      # only, i.e., avoid all requests to pypi.org
      PYPI_OFFLINE : 'false'

      # number of threads for pypi_filter.py
      PYPI_REQ_THREADS : 2

    volumes:
      # package/status directories
      - ./pypi-data:/mnt/mirror/pypi:rw
      - ./pypi-status:/mnt/mirror/pypi-status:rw

      # config

      # local base bandersnatch.conf file
      - ./config/bandersnatch.conf:/etc/bandersnatch_base.conf:ro

      # file containing list of packages to blacklist, one per line
      # https://bandersnatch.readthedocs.io/en/latest/filtering_configuration.html#packages
      - ./config/bandersnatch_blacklist_packages.conf:/etc/bandersnatch_blacklist_packages.conf:ro

      # file containing list of package regexes to blacklist, one per line
      # https://bandersnatch.readthedocs.io/en/latest/filtering_configuration.html#regex-filtering
      - ./config/bandersnatch_blacklist_packages_regex.conf:/etc/bandersnatch_blacklist_packages_regex.conf:ro

      # file containing list of packages to whitelist (can't use with blacklisting)
      # - ./config/bandersnatch_whitelist_packages.conf:/etc/bandersnatch_whitelist_packages.conf:ro
      # https://bandersnatch.readthedocs.io/en/latest/filtering_configuration.html#packages

      # should match PYPI_PROJECT_DB above if used
      - ./config/pypi_cache.db:/pypidb/pypi_cache.db:rw

  nginx:
    build:
      context: .
      dockerfile: Dockerfiles/nginx.Dockerfile
    image: mmguero/espejo_nginx:latest
    restart: "no"
    hostname: nginx
    depends_on:
      - apt-mirror
      - bandersnatch
    ports:
      - "8443:443"
    volumes:
      # package directories
      - ./apt-data:/mnt/mirror/debian:ro
      - ./pypi-data:/mnt/mirror/pypi:ro
      # config
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      # TLS certificates
      - ./certs:/etc/nginx/certs:ro
